/* Implement the c program to accept n integer to be sorted.MAin function create child process using fork system cell.
Parent process sort the integer using bubble sort and wait for child process using wait system cell.
Child process sort the integer using insertion sort.. */
#include<stdio.h>
#include<sys/types.h>
#include<unistd.h>
void bubblesort(int a[30],int n)
{
  int i,j,temp;
    for(i=0;i<n-1;i++)
     {
       for(j=0;j<n-i-1;j++)
         {
           if(a[j]>a[j+1])
            {
              temp=a[j];
              a[j]=a[j+1];
              a[j+1]=temp;
            }
         }
     }
}
int insertionsort(int a[30],int n)
{
  int i,j,temp;
   for(i=1;i<n;i++)
    {
      temp=a[i];
      j=i-1;
      while(j>=0&&temp<=a[j])
       {
         a[j+1]=a[j];
         j=j-1;
       }
       a[j+1]=temp;
    }
}
void sort()
{
   int a[25],b[25],n,i,status;
   printf("\n Enter the No.of values in array:");
     scanf("%d",&n);
   printf("\n Enter Array Elements:");
     for(i=0;i<n;i++)
       scanf("%d",&a[i]);
   int pid=fork();
    if(pid==0)
    {
      printf("\n Child Process..");
      printf("Child Process id=%d\n",getpid());
        insertionsort(a,n);
      printf("\n Element Sorted Using Insertion Sort:");
         printf("\n");
          for(i=0;i<n;i++)
            printf("%d",a[i]);
         printf("\n Parent Process Id=%d\n",getppid());
    }
    else
    {
      printf("\n Parent Process\n");
      printf("\n Parent Process Id=%d\n",getppid());
       bubblesort(a,n);
      printf("Element Sorted using Bubble Sort:");
      printf("\n");
        for(i=0;i<n;i++)
          printf("%d",a[i]);
          printf("\n\n\n");
     }
}
int main()
{
  sort();
  return 0;
}
 /*
 Output:-
 bcs@PRATHAMA:~$ gcc sort.c
 bcs@PRATHAMA:~$ ./a.out

 Enter the No.of values in array:4

 Enter Array Elements:33 22 44 11

 Parent Process

 Parent Process Id=2431
Element Sorted using Bubble Sort:
11223344



 Child Process..Child Process id=3322

 Element Sorted Using Insertion Sort:
11223344
 Parent Process Id=3321
*/ 
 
